import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error,mean_squared_error
from keras.models import Model,Sequential
from keras.layers import Dense,Activation

df = pd.read_excel('AL_WIND_07_12.xlsx')

df['Time'] = df['DateTime'].dt.hour

df = df.drop(['DateTime'],axis=1) 

Y = df['Power generated by system | (kW)']
X = df.drop(['Power generated by system | (kW)'],axis=1)

X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size=0.33, random_state=42)

def basemodel():
	model = Sequential()
	model.add(Dense(12,input_dim=5,activation='relu'))
	model.add(Dense(12,activation='relu'))
	model.add(Dense(1,activation='linear'))
	model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mae'])
	return model


regr = basemodel()

regr.fit(X_train,Y_train,batch_size=32,epochs=400,shuffle=True)
predictions = regr.predict(X_test)
df0=pd.DataFrame(predictions)
df0[df0 < 0] = 0
df['NN_predictions'] = df0
df.to_csv('NN_wind_predictions.csv')	

print(mean_absolute_error(predictions,Y_test))
print(np.sqrt(mean_squared_error(predictions,Y_test)))
